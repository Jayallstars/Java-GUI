/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.storeshop;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.io.IOException;
import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;

/**
 *
 * @author acer
 */
public class ProductCus extends javax.swing.JFrame {
    JFrame alert,input,editAlert;

    /**
     * Creates new form ProductCus
     */
    public ProductCus() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        view = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        checkbill = new javax.swing.JButton();
        menu = new javax.swing.JLabel();
        refresh1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Price", "Amount", "Totalprice"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("PRODUCT LIST");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("TOTAL PRODUCTS");

        add.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        add.setText("Add");
        add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        view.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        view.setText("View");
        view.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        delete.setText("Delete");
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        edit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        edit.setText("Edit");
        edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        checkbill.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        checkbill.setText("Check bill");
        checkbill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        checkbill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbillActionPerformed(evt);
            }
        });

        menu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menu.setText("Menu");
        menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuMouseClicked(evt);
            }
        });

        refresh1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        refresh1.setText("Refresh");
        refresh1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(374, 374, 374))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(389, 389, 389))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(338, 338, 338)
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(view)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refresh1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(321, Short.MAX_VALUE)
                        .addComponent(edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkbill)
                        .addGap(236, 236, 236)
                        .addComponent(menu, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(view)
                    .addComponent(refresh1))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit)
                    .addComponent(delete)
                    .addComponent(checkbill)
                    .addComponent(menu))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewActionPerformed
        DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
        int selectRowIndex = jTable1.getSelectedRow();
        String id = model1.getValueAt(selectRowIndex,0).toString();
        String name = model1.getValueAt(selectRowIndex, 1).toString();
        String price = model1.getValueAt(selectRowIndex, 2).toString();
        ImageIcon image = new ImageIcon("src/main/java/com/mycompany/storeshop/images/"+id+".png");
        JOptionPane.showConfirmDialog(null, "<html><b style=\"font-size:10px;\">NAME : " + name + "<br>" + "PRICE : " + price + " Bath</b></html>", name, JOptionPane.PLAIN_MESSAGE, 3, image);
    }//GEN-LAST:event_viewActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        DefaultTableModel modelTable = (DefaultTableModel)jTable3.getModel();
        int selectRow = jTable3.getSelectedRow();
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "Are you sure?","Warning",dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION){
            modelTable.removeRow(selectRow);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        DefaultTableModel modelTable = (DefaultTableModel)jTable3.getModel();
        int selectRow = jTable3.getSelectedRow();
        String amount = JOptionPane.showInputDialog(input,"Enter Amount");
        String name = modelTable.getValueAt(selectRow, 0).toString();
        String price = modelTable.getValueAt(selectRow, 1).toString();
        String totalPrice = String.valueOf(Integer.parseInt(amount) * Integer.parseInt(price));
        String arrayTable [] = {name,price,amount,totalPrice};
        modelTable.removeRow(selectRow);
        modelTable.addRow(arrayTable);
    }//GEN-LAST:event_editActionPerformed

    private void checkbillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbillActionPerformed
        int money = 0;
        ConnectDB test = new ConnectDB();
        Connection connect = null;
        try {
            Class.forName("org.mariadb.jdbc.Driver");
            connect =  DriverManager.getConnection("jdbc:mariadb://localhost:3306/shop_database?&user=root&password=" +
                    "?user=root&password=");
            if(connect != null){
                PreparedStatement st = connect.prepareStatement("SELECT * from shop_money");
                ResultSet result = st.executeQuery();
                while (result.next()){
                    money = result.getInt("money");
                }
                connect.close();
            } else {
                System.out.println("Database Connect Failed.");
            }
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        DefaultTableModel modelTable = (DefaultTableModel)jTable3.getModel();
        String numdata;
        int totalPrice = 0;
        for (int count = 0; count < modelTable.getRowCount(); count++){
            totalPrice += Integer.parseInt(modelTable.getValueAt(count, 3).toString());
        }
        numdata = String.valueOf(totalPrice);
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "<html><b style=\"font-size:10px;\">Your total price : " + numdata + " Bath <br> Yes to confirm / No to cancel</b></html>","Warning",dialogButton);
        if (dialogResult == JOptionPane.YES_OPTION){
            JOptionPane.showMessageDialog(alert, "<html><b style=\"font-size:10px;\">Thank you for shopping! <br>&nbsp;  Have a nice day.</b></html>");
            JOptionPane.showMessageDialog(alert, "<html><b style=\"font-size:10px;\">Money Shop +" + totalPrice +"</b></html>");
            totalPrice = money + totalPrice;
            test.UpdateMoney(totalPrice);
        }

    }//GEN-LAST:event_checkbillActionPerformed

    private void menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseClicked
        new LoginPage().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuMouseClicked

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        ConnectDB test = new ConnectDB();
        input = new JFrame();
        String amount = JOptionPane.showInputDialog(input,"Enter Amount");
        DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
        int selectRowIndex = jTable1.getSelectedRow();
        String id = model1.getValueAt(selectRowIndex, 0).toString();
        String name = model1.getValueAt(selectRowIndex, 1).toString();
        String price = model1.getValueAt(selectRowIndex, 2).toString();
        String qty = model1.getValueAt(selectRowIndex,3).toString();
        qty = String.valueOf(Integer.parseInt(qty) - Integer.parseInt(amount));
        test.UpdateDatabase(id,qty);
        String totalPrice = String.valueOf(Integer.parseInt(amount) * Integer.parseInt(price));
        String arrayTable [] = {name,price,amount,totalPrice};
        DefaultTableModel model3 = (DefaultTableModel)jTable3.getModel();
        jTable3.setDefaultEditor(Object.class, null);
        model3.addRow(arrayTable);
        refresh1ActionPerformed(evt);
        //-------------------------------------------------------------//
//        Connection connect = null;
//        try {
//            Class.forName("org.mariadb.jdbc.Driver");
//            connect =  DriverManager.getConnection("jdbc:mariadb://localhost:3306/shop_database?&user=root&password=" +
//                    "?user=root&password=");
//
//            if(connect != null){
//                PreparedStatement st = connect.prepareStatement("SELECT * from products");
//                ResultSet result = st.executeQuery();
//                DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
//                ((DefaultTableModel)jTable1.getModel()).setNumRows(0);
//                while (result.next()){
//                    String id_database = String.valueOf(result.getInt("products_id"));
//                    String name_database = result.getString("products_name");
//                    String price_database = result.getString("products_price");
//                    String qty_database = result.getString("products_qty");
//                    String array [] = {id_database,name_database,price_database,qty_database};
//                    jTable1.setDefaultEditor(Object.class, null);
//                    tblModel.addRow(array);
//                }
//                connect.close();
//            } else {
//                System.out.println("Database Connect Failed.");
//            }
//
//        } catch (Exception e) {
//            // TODO Auto-generated catch block
//            e.printStackTrace();
//        }
        }//GEN-LAST:event_addActionPerformed

    private void refresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh1ActionPerformed
        Connection connect = null;
        try {
            Class.forName("org.mariadb.jdbc.Driver");
            connect =  DriverManager.getConnection("jdbc:mariadb://localhost:3306/shop_database?&user=root&password=" +
                    "?user=root&password=");

            if(connect != null){
                PreparedStatement st = connect.prepareStatement("SELECT * from products");
                ResultSet result = st.executeQuery();
                DefaultTableModel tblModel = (DefaultTableModel)jTable1.getModel();
                ((DefaultTableModel)jTable1.getModel()).setNumRows(0);
                while (result.next()){
                    String id = String.valueOf(result.getInt("products_id"));
                    String name = result.getString("products_name");
                    String price = result.getString("products_price");
                    String qty = result.getString("products_qty");
                    String arrayTable [] = {id,name,price,qty};
                    jTable1.setDefaultEditor(Object.class, null);
                    tblModel.addRow(arrayTable);
                }
                connect.close();
            } else {
                System.out.println("Database Connect Failed.");
            }

        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }//GEN-LAST:event_refresh1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductCus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductCus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductCus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductCus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductCus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton checkbill;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JLabel menu;
    private javax.swing.JButton refresh1;
    private javax.swing.JButton view;
    // End of variables declaration//GEN-END:variables
}
